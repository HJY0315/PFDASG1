﻿@{
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <!-- Use Unicode character encoding - multi-language compatibility -->
    <meta charset="utf-8">

    <!-- Set the initial view zooming scale for mobile device -->
    <meta name="viewport" content="width = device-width,
 initial-scale = 1" />

    <title>OCBC</title>

    <!-- Reference to customized styling for this website -->
    @*<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />*@
    <link rel="stylesheet" type="text/css" href="~/css/homepage.css">

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <!-- Bootstrap JavaScript (Popper.js is required for dropdowns) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script src="//cdnjs.cloudflare.com/ajax/libs/annyang/2.6.0/annyang.min.js"></script>

  
</head>
<body>
    <header>
        @await Html.PartialAsync("Navbar.cshtml")
    </header>
    <div class="imagetext">
        <div class="blur">
            <img src="~/img/home_img.jpg" alt="Image" />
            <div class="text"><b>Welcome to OCBC</b></div>
        </div>
    </div>
    <fieldset class="FormContent">
        <legend></legend>
        <div class="flex">
            <div class="flex-column">
                <p><b>Banking for Individual</b></p>
                <li class="flex-item"><a href="#">FRANK by OCBC</a></li>
                <li class="flex-item"><a href="#">Personal Banking</a></li>
                <li class="flex-item"><a href="#">Premier Banking</a></li>
                <li class="flex-item"><a href="#">Premier Private Client</a></li>
            </div>
            <div class="flex-column">
                <p><b>Banking for Businesses</b></p>
                <li class="flex-item"><a href="#">Business Banking</a></li>
                <li class="flex-item"><a href="#">Large Corporates</a></li>
            </div>
            <div class="flex-column">
                <p><b>OCBC Group</b></p>
                <li class="flex-item"><a href="#">About us</a></li>
                <li class="flex-item"><a href="#">Sustainability</a></li>
                <li class="flex-item"><a href="#">Careers</a></li>
                <li class="flex-item"><a href="#">Investors</a></li>
            </div>
        </div>
    </fieldset>

    <!-- Add an overlay div -->
    <div id="overlay"></div>

    <!-- Center div -->
    <div id="centerDiv" class="center-div">
        <span class="close" onclick="closeCenterDiv()">&times;</span>
        <div aria-live="assertive">
            <p tabindex="1" id="accessibilityMode">Accessibility Mode</p>
        </div>
        <div id="tutorialContent" aria-live="assertive">
            <p tabindex="1">
            </p>
        </div>

        <div class="buttons">
            <button tabindex="1" type="button" class="btn btn-secondary" id="cancelButton">Cancel</button>
            <button tabindex="1" type="button" class="btn btn-success" id="nextButton">Next</button>
        </div>
    </div>


    <script>
    var activateCount = localStorage.getItem("activateCount");
    document.addEventListener("DOMContentLoaded", function () {
        // Check if the modal should be shown
        var shouldShowModal = sessionStorage.getItem("showModal");

        if (!shouldShowModal) {
            openCenterDiv();
            // Set the flag to indicate that the modal has been shown
            sessionStorage.setItem("showModal", "true");
        }
        document.getElementById('accessibilityMode').focus();

        var storedStatus = sessionStorage.getItem("annyangStatus");

        activateCount = 0;
    });

    // Variable to keep track of the current tutorial step
    var currentStep = 1;

    // Function to update tutorial content for different steps
        function updateTutorialContent() {
            var tutorialContent = document.getElementById("tutorialContent");

            // Check the current step and update content accordingly
            switch (currentStep) {
                case 1:
                    tutorialContent.innerHTML = `<p>Do you want to activate the accessibility mode? This mode includes features such as 
                        voice recognition, which can be useful for some users. A tutorial will be provided.
                                To Cancel, Shift + b. To Activate, Shift + n. </p>`;
                    cancelButton.textContent = "Cancel";
                    cancelButton.removeEventListener('click', previousTutorialStep);
                    cancelButton.addEventListener('click', close);   //before activation we have cancel button
                    break;
                case 2:
                    tutorialContent.innerHTML = `<p>Tutorial Step 1: You can use the shortcut of control + space key to toggle the accessibility 
                        mode on and off. Toggle it once and go to the next step</p>`;
                    cancelButton.textContent = "Previous";
                    cancelButton.removeEventListener('click', close);
                    cancelButton.addEventListener('click', previousTutorialStep); //in tutorial we only have previous button
                    break;
                case 3:
                    tutorialContent.innerHTML = `<p>Step 2: After login, there is a search bar in every page. You can use 
                    the voice command 'Search' to focus on the search bar. Use 'Type In' voice command followed by your input to enter your information verbally.
                     After that, press enter on keyboard.Try it out in the search bar below.</p>
                        <div class="search-wrapper">
                            <i class="search-icon bx bx-search"></i>
                            <input type="search" id="searchDemo" data-search placeholder="Search">
                        </div>`;
                    cancelButton.textContent = "Previous";
                    cancelButton.removeEventListener('click', close);
                    cancelButton.addEventListener('click', previousTutorialStep);
                    break;
                case 4:
                    tutorialContent.innerHTML = `<p>You can use 'Type in' command to fill up any of the input field in this website. Remember 
                    the command carefully and utilize it to make your journey easier.</p>`;
                    cancelButton.textContent = "Previous";
                    cancelButton.removeEventListener('click', close);
                    cancelButton.addEventListener('click', previousTutorialStep);
                    break;
                case 5:
                    tutorialContent.innerHTML = `<p>Step 4: To navigate to different pages, use voice commands starting with 'Go to.' 
                    For example, say 'Go to login page'. The system also may provide suggestion for you based on your inacurate voice command.</p>`;
                    cancelButton.textContent = "Previous";
                    cancelButton.removeEventListener('click', close);
                    cancelButton.addEventListener('click', previousTutorialStep);
                    break;
            }
        }

    function openCenterDiv() {
        var overlay = document.getElementById("overlay");
        var centerDiv = document.getElementById("centerDiv");
        if (overlay && centerDiv) {
            overlay.style.display = "block";
            centerDiv.style.display = "block";
            document.body.style.overflow = "hidden"; // Disable scrolling
            updateTutorialContent(); // Update content when opening the modal
        }
    }

    function closeCenterDiv() {
        var overlay = document.getElementById("overlay");
        var centerDiv = document.getElementById("centerDiv");
        if (overlay && centerDiv) {
            overlay.style.display = "none";
            centerDiv.style.display = "none";
            document.body.style.overflow = ""; // Enable scrolling
        }
    }

    function nextTutorialStep() {
        // Increment the current step
        currentStep++;
        if (currentStep === 6) {
            close();
        }

        // Update the tutorial content for the new step
        updateTutorialContent();
    }

    function previousTutorialStep() {
        // Decrement the current step
        currentStep--;

        if (currentStep === 0) {
            close();
        }

        // Update the tutorial content for the new step
        updateTutorialContent();
    }

    document.getElementById('cancelButton').addEventListener('click', close);

    function activateAccessibility() {
        // code for activating accessibility
        if (!annyang.isListening()) {
            startListening();
            activateCount++;
            sessionStorage.setItem("activateCount", activateCount);
        }
            toggleEnlargedText();
            toggleEnlargedPage();

    }

    function close() {
        // code for canceling activation
        closeCenterDiv();
        documentgetElementById('centerDiv').style.display = 'none';
    }

    // Add another event listener to the "Activate" button for the second action (proceed to the next step)
    document.getElementById('nextButton').addEventListener('click', function () {
        if (currentStep === 1) {
            activateAccessibility();
            nextTutorialStep();
        } else if (currentStep === 2 && activateCount === 2) {
            nextTutorialStep();
        }
        else if (currentStep === 2 && activateCount < 2){
            speakResponse("Please toggle the accessibility mode using control + space.");
        }
        else if (currentStep === 3) {
            const searchDemoValue = document.getElementById('searchDemo').value.trim();
            if (searchDemoValue !== '') {
                nextTutorialStep();
            }
            else {
                speakResponse("Please enter something into search bar.");
            }
        }
        else if (currentStep === 4) {
            nextTutorialStep();
        }
        else if (currentStep === 5) {
            nextTutorialStep();
        }
    });

    document.addEventListener("keydown", function (event) {
        // Check if centerDiv exists
        var centralDiv = document.getElementById("centerDiv");
        if (!centerDiv) {
            return;
        }

        if (event.shiftKey && event.key === "N" && document.activeElement.tagName !== "INPUT") {
            if (currentStep === 1) {
                activateAccessibility();
                nextTutorialStep();
            } else if (currentStep === 2 && activateCount === 2) {
                nextTutorialStep();
            }
            else if (currentStep === 2 && activateCount < 2) {
                speakResponse("Please toggle the accessibility mode using control + space.");
            }
            else if (currentStep === 3) {
                const searchDemoValue = document.getElementById('searchDemo').value.trim();
                if (searchDemoValue !== '') {
                    nextTutorialStep();
                }
                else {
                    speakResponse("Please enter something into search bar.");
                }
            }
            else if (currentStep === 4) {
                nextTutorialStep();
            }
            else if (currentStep === 5) {
                nextTutorialStep();
            }
        } 
        else if (event.shiftKey && event.key === "B" && document.activeElement.tagName !== "INPUT") {
            previousTutorialStep();
        }

        if ((event.ctrlKey || event.metaKey) && event.key === " " && document.activeElement.tagName !== "INPUT") {
            if (!annyang.isListening()) {
                activateCount++;
            }
        }
    });
    </script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/annyang-setup.js" asp-append-version="true"></script>
</body>
</html>