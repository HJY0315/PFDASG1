@model IEnumerable<PFDASG1.Models.Transactions>
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor


@{
    
    int userid = 0;
    if (HttpContextAccessor.HttpContext != null)
    {
        userid = HttpContextAccessor.HttpContext.Session.GetInt32("id") ?? 0;
  
    }
    Layout = "~/Views/Shared/_Layout.cshtml";
    // Check if Context and Session are not null
    var fontSize = Context?.Session?.GetInt32("FontSize") ?? 20;
}

<!--
    Keyboard shortcut & Voice Command guide:
    1. Create a floating button for user to click.
    2. Ensure that the button has the keyboard icon.
    3. Click the button to display keyboard shortcut and voice command.
    4. Create few shortcuts key to tryout.
    5. Type out the remaining shortcuts.
    6. Done
-->

<!DOCTYPE html>
<html>
<head>
    <!-- Use Unicode character encoding - multi-language compatibility -->
    <meta charset="utf-8">

    <!-- Set the initial view zooming scale for mobile device -->
    <meta name="viewport" content="width = device-width,
 initial-scale = 1" />

    <title>OCBC - User Homepage</title>

    <!-- Reference to customized styling for this website -->
    @*<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />*@
    <link rel="stylesheet" type="text/css" href="~/css/site.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <!-- Bootstrap JavaScript (Popper.js is required for dropdowns) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script src="//cdnjs.cloudflare.com/ajax/libs/annyang/2.6.0/annyang.min.js"></script>

    @{
        // Check if Context and Session are not null
        //var fontSize = Context?.Session?.GetInt32("FontSize") ?? 20;
    }

    <style>
        body {
            font-size: @(fontSize)px;
        }
    </style>
</head>

<body>
    <header>
        <partial name="_navbar" />
    </header>

    @*Summary Widgets*@
    <div class="row mb-4">

        <div class="col-md-4">
            <div class="d-flex flex-row widget summary income">
                <div class="d-flex flex-column justify-content-center p-5">
                    <i class="fa-solid fa-dollar-sign fa-2xl"></i>
                </div>
                <div class="d-flex flex-column m-auto py-3">
                    <span class="lead">Total Income</span>
                    <h1 class="display-6 fw-bold">@ViewBag.totalBalance</h1>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="d-flex flex-row widget summary expense">
                <div class="d-flex flex-column justify-content-center p-5">
                    <i class="fa-solid fa-dollar-sign fa-2xl"></i>
                </div>
                <div class="d-flex flex-column m-auto py-3">
                    <span class="lead">Total Expense</span>
                    <h1 class="display-6 fw-bold">@ViewBag.amountToSubtract</h1>
                </div>
            </div>
        </div>

        <div class="col-md-4">
            <div class="d-flex flex-row widget summary balance">
                <div class="d-flex flex-column justify-content-center p-5">
                    <i class="fa-solid fa-dollar-sign fa-2xl"></i>
                </div>
                <div class="d-flex flex-column m-auto py-3">
                    <span class="lead">Balance</span>
                    <h1 class="display-6 fw-bold">@ViewBag.Balance</h1>
                </div>
            </div>
        </div>
    </div>

    @*Doughnut and Spline Chart*@
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="widget chart">
                <div class="p-4">
                    <h5 class="fw-bold">Expense By Month</h5>
                </div>
                <ejs-accumulationchart id="doughnutchart" enableSmartLabels background="#1a222b">
                    <e-accumulation-series-collection>
                        <e-accumulation-series dataSource="@ViewBag.DoughnutChartData"
                                               xName="categoryTitleWithIcon" yName="amount"
                                               innerRadius="60%" legendShape="Circle"
                                               palettes=@(new string[]{"#0e8d76","#a4b219","#cb9b00","#8a442c","#0454b5","#7d0a0a","#822690","#4c2090","#313e93","#0096ac"})>
                            <e-accumulationseries-datalabel name="formattedAmount" visible></e-accumulationseries-datalabel>
                        </e-accumulation-series>
                    </e-accumulation-series-collection>
                    <e-accumulationchart-legendsettings position="Top" toggleVisibility="false">
                        <e-legendsettings-textstyle color="#fff" size="1rem"></e-legendsettings-textstyle>
                    </e-accumulationchart-legendsettings>
                    <e-accumulationchart-tooltipsettings enable></e-accumulationchart-tooltipsettings>
                </ejs-accumulationchart>
            </div>
        </div>
       </div>
    @*Recent Transactions and More*@
    <div class="row">
        <div class="col-md-6">
            <div class="widget">
                <div class="p-4">
                    <h5 class="fw-bold">Recent Transactions</h5>
                </div>
                <div class="px-4 pb-4">
                    <ejs-grid id="recent-transactions"
                              dataSource="@ViewBag.RecentTransactions" gridLines="None">
                        <e-grid-columns>
                            <e-grid-column headerText="Category" field="CategoryTitleWithIcon"></e-grid-column>
                            <e-grid-column headerText="Date" field="Date" type="date" format="MMM-dd-yy"></e-grid-column>
                            <e-grid-column headerText="Amount" field="FormattedAmount" textAlign="Right"></e-grid-column>
                        </e-grid-columns>
                    </ejs-grid>
                </div>
            </div>
        </div>
    </div>
    @*
    @{
        if (Model != null)
        {
            <div class="flex-table">
                <div class="flex-header">
                    <button class="filter-btn active" data-filter="all">All</button>
                    <button class="filter-btn" data-filter="expense">Expense</button>
                    <button class="filter-btn" data-filter="income">Income</button>
                </div>
                <div class="header">
                    <div class="flex-cell">Date</div>
                    <div class="flex-cell">Description</div>
                    <div class="flex-cell">Amount</div>
                </div>
                @foreach (var item in Model)
                {
                    <div class="flex-row" data-type="@(item.RecipientID == @userid ? "income" : "expense")">
                        <div class="flex-cell">@item.TransactionDate.Date.ToString("yyyy-MM-dd")</div>
                        <div class="flex-cell">@item.Description</div>
                        <div class="flex-cell" style="color: @(item.RecipientID == @userid ? "green" : "red"); font-weight:bold;">
                            @(item.RecipientID == @userid ? "+" : "-")@item.Amount.ToString("0.00")
                        </div>
                    </div>
                }
            </div>
        }
    }
    *@

    <footer>
        <p>&copy; Please do not share or download your information.</p>
    </footer>

    <script>
        document.addEventListener("DOMContentLoaded", function () {

            const chartData = {
                labels: ["Expense", "Income"],
                datasets: [
                    {
                        data: [@ViewBag.amountToSubtract, @ViewBag.totalBalance],
                        backgroundColor: ["#006400", "#FC4349"],
                    },
                ],
            };

            const options = {
                responsive: true,
                maintainAspectRatio: true,
            };

            const ctx = document.getElementById("doughnutChart").getContext("2d");
            const myDoughnutChart = new Chart(ctx, {
                type: "doughnut",
                data: chartData,
                options: options,
            });
        });



        const progressElement = document.getElementById('moneyProgress');
        const progressTextLabel = document.getElementById('progressText');
        const moneyValue = @ViewBag.amountToSubtract;
        const remainingValue = @ViewBag.totalBalance - @ViewBag.amountToSubtract;
        const maxValue = @ViewBag.totalBalance;
        progressElement.value = moneyValue;
        progressElement.max = maxValue;
        // Update the text within the progress bar
        progressTextLabel.textContent = `Your Card Balance: $${remainingValue}`;
        const filterButtons = document.querySelectorAll('.filter-btn');
        const rowsToFilter = document.querySelectorAll('.flex-row');
        filterButtons.forEach(button => {
            button.addEventListener('click', () => {
                filterButtons.forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');
                const filterValue = button.getAttribute('data-filter');
                rowsToFilter.forEach(row => {
                    const rowType = row.getAttribute('data-type');
                    if (filterValue === 'all') {
                        row.style.display = 'flex';
                    } else {
                        row.style.display = rowType === filterValue ? 'flex' : 'none';
                    }
                });
            });
        });
    </script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/search.js" asp-append-version="true"></script>
    <script src="~/js/annyang-setup.js" asp-append-version="true"></script>
</body>
</html>