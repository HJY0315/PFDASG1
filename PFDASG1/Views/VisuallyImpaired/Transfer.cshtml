@model PFDASG1.Models.TransactionViewModel
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>OCBC</title>
    <link rel="stylesheet" type="text/css" href="~/css/transfer.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
</head>

<body>
    <header>

        <partial name="_navbar" />
    </header>
    <div class="transfer-form container mt-5">
        <form asp-controller="VisuallyImpaired" asp-action="Transfer" method="post">
            <div class="form-step-list">
               @* <div class="form-step-item active">
                    <span class="item__step">1</span>
                    <p class="item__title mt-1">Select Account</p>
                </div>*@
                <div class="form-step-item text-center">
                    <span class="item__step">1</span>
                    <p class="item__title mt-1">Search Recipient</p>
                </div>
                <div class="form-step-item text-center">
                    <span class="item__step">2</span>
                    <p class="item__title mt-1">Enter Amount</p>
                </div>
                <div class="form-step-item text-right">
                    <span class="item__step">3</span>
                    <p class="item__title mt-1">Review</p>
                </div>
            </div>
            
            <div class="form-layout">
                @*  <!-- Step 1: Select Account -->
                <div class="form-group step-content">
                <label asp-for="AccountId">Choose Account</label>
                <select name="bankTransfer" id="bankTransfer" asp-for="AccountId">
                <option value="1">Please Select</option>
                <option value="2">Frank Card</option>
                <option value="3">Saving Account</option>
                </select>
                </div>*@

                @*<!-- Step 2: Select Payment Type -->
                <div class="form-group step-content">
                    <label asp-for="RecipientID">Search Recipient</label>
                    <select name="paymentType" id="paymentType" onchange="updatePaymentMethod()" asp-for="RecipientID">
                        <option value="1">Please Select</option>
                        <option value="2">NRIC</option>
                        <option value="3">Mobile Number</option>
                    </select>

                    <!-- Input for NRIC -->
                    <div class="form-group" id="nricInput" style="display:none;">
                        <label asp-for="NRIC">Enter NRIC</label>
                        <input type="text" id="nric" placeholder="S1234567A" maxlength="9" />
                        <span asp-validation-for="NRIC" class="text-danger"></span>
                    </div>

                    <!-- Input for Mobile Number -->
                    <div class="form-group" id="mobileInput" style="display:none;">
                        <label asp-for="MobileNumber">Enter Mobile Number</label>
                        <input type="text" id="mobileNumber" placeholder="91234567" maxlength="8" />
                        <span asp-validation-for="MobileNumber" class="text-danger"></span>
                    </div>
                </div>*@
                <!-- Step 1: Enter phone number -->
                <div class="form-group step-content">
                <div class="form-group" id="mobileInput">
                    <label asp-for="phoneNumber"></label>
                    <input asp-for="phoneNumber" type="text" id="mobileNumber" placeholder="Enter Mobile Number" maxlength="8" />
                    <span asp-validation-for="phoneNumber" class="text-danger" id="phoneNo"></span>
                        <p>Transfer to: <span id="reviewTransferTo">@Model.receipient</span></p>
                        <table id="recipientTable" class="table">
                            <thead id="tableHeader" hidden>
                                <tr>
                                    <th>Name</th>
                                    <th>Phone Number</th>
                                </tr>
                            </thead>
                            <tbody id="recipientTableBody">
                            </tbody>
                        </table>
                </div>
                </div>
                <!-- Step 2: Enter Amount -->
                <div class="form-group step-content">
                    <label asp-for="Amount">Enter your Amount</label>
                    <input type="number" id="amount" asp-for="Amount" required min="1" />
                    <span asp-validation-for="Amount" class="text-danger" id="amountMsg"></span>

                  @*  <label>Remaining Balance:</label>
                    <p>$@ViewBag.amount</p>*@


                    <label asp-for="Description">Description</label>
                    <input type="text" id="description" asp-for="Description" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>

                <!-- Step 3: Confirmation -->
                <div class="form-group step-content">
                    <img src="../img/checked.png" width="150" height="150" />
                    <p>Amount: <span id="reviewAmount">@Html.DisplayFor(model => model.Amount)</span></p>
                    <p>Transfer to: <span id="reviewTransferTo">@ViewData["ReceipientName"]</span></p>
                    <p>Description: <span id="reviewDescription">@Model.Description</span></p>
                </div>
            </div>

        <!-- Next and Previous Buttons -->
        <div class="form-navigation mt-5">
            <button class="btn btn-primary" id="prevButton" onclick="nextPrev(-1)">Previous</button>
            <button class="btn btn-primary" id="nextButton" onclick="nextPrev(0)">Next</button>
        </div>
        </form>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/annyang/2.6.0/annyang.min.js"></script>
    <script>
        let currentStep = 0;
        const formSteps = document.querySelectorAll('.form-step-item');
        const formContents = document.querySelectorAll('.form-group.step-content');

        setTimeout(function () {
            $('#mobileNumber').focus();
        }, 500);

        function showStep(stepIndex) {
            formSteps.forEach((step, index) => {
                step.classList.toggle('active', index === stepIndex);
            });

            formContents.forEach((content, index) => {
                const isCurrentStep = index === stepIndex;
                content.classList.toggle('active', isCurrentStep);

                // Hide or show the content based on the current step
                if (isCurrentStep) {
                    content.style.display = 'block';
                } else {
                    content.style.display = 'none';
                }
            });

            updateReviewContent();
        }

        //function updateReviewContent() {
        //    const reviewAmount = document.getElementById('reviewAmount');
        //    const reviewTransferTo = document.getElementById('reviewTransferTo');
        //    const reviewDescription = document.getElementById('reviewDescription');

        //    // Get values from the form inputs
        //    const amount = document.getElementById('amount').value;
        //    const paymentType = document.getElementById('paymentType').value;

        //    // Update the review content
        //    reviewAmount.textContent = amount;
        //    //reviewTransferTo.textContent = getTransferToText(paymentType);

        //    // Display the description in the review
        //    const description = document.getElementById('description').value;
        //    reviewDescription.textContent = description;
        //}


        //function getTransferToText(paymentType) {
        //    const nricInput = document.getElementById('nric');
        //    const mobileNumberInput = document.getElementById('mobileNumber');

        //    if (paymentType === '2') {
        //        return 'Transfer to NRIC: ' + nricInput.value;
        //    } else if (paymentType === '3') {
        //        return 'Transfer to Mobile Number: ' + mobileNumberInput.value;
        //    } else {
        //        return 'Unknown Transfer';
        //    }
        //}

        const isPhoneNumberValid = false;

        function phoneNumberValidation() {
            const phoneNumber = document.getElementById('mobileNumber').value;

            return new Promise((resolve, reject) => {
                $.ajax({
                    type: 'GET',
                    url: '/VisuallyImpaired/PhoneNumberValidation',
                    data: { phoneNumber: phoneNumber },
                    success: function (data) {
                        if (data === null) {
                            document.getElementById('phoneNo').innerHTML = 'Invalid phone number';
                            reject('Invalid phone number');
                        } else if (data === "Logged in User") {
                            document.getElementById('phoneNo').innerHTML = 'Transfer to own account is not supported';
                            reject('Transfer to own account');
                        } else {
                            document.getElementById('phoneNo').innerHTML = '';
                            resolve(true);  // Phone number is valid
                        }
                    },
                    error: function (error) {
                        console.error('Error:', error.responseText);
                        document.getElementById('phoneNo').innerHTML = 'Error validating phone number.';
                        reject('Error validating phone number');
                    }
                });
            });
        }

        function inputValidation() {
            // Get the parent div element by its class name
            var formGroup = document.querySelector('.step-content');

            // Get all span elements within the parent div
            var spanElements = formGroup.querySelectorAll('span.text-danger');

            var isValid = true;

            const formContent = document.querySelector('.form-group.step-content[style="display: block;"]');

            // Loop through each span element to get the asp-validation-for attribute value
            spanElements.forEach(function (span) {
                var innerSpanValue = span.getAttribute('id');
                var input = span.previousElementSibling;
                if (input && input.tagName.toLowerCase() === 'input') {
                    var inputValue = input.value.trim(); // Get the value of the input
                    console.log('inside input')
                    //if the page is at the phone number page
                    if (formContent.querySelector('#mobileNumber')) {
                        if (inputValue.length !== 8) { //check if the phone number input have 8 digit
                            span.innerHTML = 'Please enter an 8-digit phone number!'; //update error message
                            isValid = false; //false so that it wont go to next page
                        }
                    }
                }
            })

            return isValid;
        }


        function getDescriptionText(bankTransfer, paymentType) {
            // Customize this function based on your requirements
            return 'Payment for ' + getTransferToText(bankTransfer, paymentType);
        }


        function speakConfirmation() {
            const msg = new SpeechSynthesisUtterance('Transfer confirmed!');
            window.speechSynthesis.speak(msg);
        }

        function speakAmountError() {
            const msg = new SpeechSynthesisUtterance('Your account have insufficient balance');
            window.speechSynthesis.speak(msg);
        }

        let currentPage = 1;

        function nextPrev(n) {
            // Update the current page based on the navigation
            currentPage += n;
            console.log(currentPage)
            // Perform your page navigation logic here


            phoneNumberValidation().then(function () {
                isPhoneNumberValid = true;
            }).catch(function (error) {
                isPhoneNumberValid = false;
                console.log('Error:', error);
            });

            if (currentPage === 1) {
                console.log('1');
                var isValidInput = inputValidation();
                if (isValidInput) {
                    phoneNumberValidation().then(function () {
                        console.log('inside');
                        var amountInput = document.getElementById('amount');
                        amountInput.value = '1';
                        // Change the button text to "Confirm"
                        document.getElementById('nextButton').innerText = 'Confirm';
                        // Update the onclick event to call the speakConfirmation function
                        //document.getElementById('nextButton').onclick = function () {
                        //    nextPrev(1);
                        //}
                        //document.getElementById('prevButton').onclick = function(){
                        //    nextPrev(-1);
                        //};

                    }).catch(function (error) {
                        console.log('Error:', error);
                    });
                }
            } else if (currentPage === 2) {
                console.log(currentPage)
                var isvalidInput = inputValidation();
                if (isvalidInput) {
                    phoneNumberValidation().then(function () {
                        // Reset the button text to "Next" for other pages
                        document.getElementById('nextButton').innerText = 'Done';
                        // Reset the onclick event to the original function for other pages
                        //document.getElementById('nextButton').onclick = function () {
                        //    nextPrev(1);
                        //}
                        document.getElementById('prevButton').onclick = function(){
                            nextPrev(-1);
                        }
                    }).catch(function (error) {
                        console.log('Error:', error);
                    });
                }
            } else {
                console.log('else')
                var isvalidInput = inputValidation();
                if (isvalidInput) {
                    console.log('else valid')
                    phoneNumberValidation().then(function () {
                        // Reset the button text to "Next" for other pages
                        document.getElementById('nextButton').innerText = 'Next';
                        // Reset the onclick event to the original function for other pages
                        document.getElementById('nextButton').onclick = function () {
                            nextPrev(1);
                        };
                        // Show the buttons for other pages
                        document.getElementById('prevButton').style.display = 'block';
                        document.getElementById('nextButton').style.display = 'block';
                    }).catch(function (error) {
                        console.log('Error:', error);
                    });
                }
            }

            console.log(currentPage)
            var isvalidInput = inputValidation();
            if (isvalidInput) {
                console.log('out valid')
                phoneNumberValidation().then(function () {
                    console.log('out valid2')
                    //// Perform your existing logic for updating the current step
                    if (currentPage < 0) {
                        currentPage = 0;
                    } else if (currentPage >= formSteps.length) {
                        currentPage = formSteps.length - 1;
                    }
                    showStep(currentPage);
                }).catch(function (error) {
                    console.log('Error:', error);
                });
            }
        }

        document.addEventListener('DOMContentLoaded', function () {
            // Get the error message from ViewData
            const statusMsg = '@ViewData["status"]';

            // Check if errorMsg is not null or empty
            if (statusMsg && statusMsg.trim() === "failed") {
                // If error message is present, show step 2
                document.getElementById('nextButton').innerText = 'Confirm';
                document.getElementById('amountMsg').innerHTML = 'Your account have insufficient balance';
                speakAmountError();
                currentPage = 1;
                showStep(1);
            } 
            else if (statusMsg.trim() === "success") {
                speakConfirmation();
                document.getElementById('nextButton').innerText = 'Done';
                currentPage = 2;
                showStep(2);
            }
            else{
                showStep(0);
            }
        });

        function searchPhoneNumber() {
            const phoneNumber = document.getElementById('mobileNumber').value;

            if (phoneNumber.length >= 4) {
                $.ajax({
                    type: 'GET',
                    url: '/VisuallyImpaired/SearchPhoneNumber',
                    data: { phoneNumber: phoneNumber },
                    success: function (data) {
                        const recipientTableBody = document.getElementById('recipientTableBody');
                        const tableHeader = document.getElementById('tableHeader');

                        // Clear previous table rows
                        recipientTableBody.innerHTML = '';

                        if (data && data.length > 0) {
                            tableHeader.removeAttribute('hidden');
                            data.forEach(user => {
                                const row = document.createElement('tr'); // Create a new table row

                                // Create table data cells for name and phone number
                                const nameCell = document.createElement('td');
                                nameCell.textContent = user.name;
                                row.appendChild(nameCell);

                                const phoneNumberCell = document.createElement('td');
                                phoneNumberCell.textContent = user.phoneNumber;
                                row.appendChild(phoneNumberCell);

                                // Add click event to table row for selection
                                row.addEventListener('click', function () {
                                    // Remove 'selected' class from all rows
                                    const rows = recipientTableBody.getElementsByTagName('tr');
                                    for (const r of rows) {
                                        r.classList.remove('selected');
                                    }

                                    // Add 'selected' class to the clicked row
                                    row.classList.add('selected');

                                    // Set values for mobileNumber and reviewTransferTo
                                    document.getElementById('mobileNumber').value = user.phoneNumber;
                                    document.getElementById('reviewTransferTo').textContent = user.name;

                                    // Clear the table by setting its inner HTML to an empty string
                                    recipientTableBody.innerHTML = '';

                                    // Hide the table header after clearing the results
                                    tableHeader.setAttribute('hidden', true);
                                });

                                recipientTableBody.appendChild(row); // Append the row to the table body
                            });
                        } else {
                            tableHeader.setAttribute('hidden', true);
                            const row = document.createElement('tr');
                            const cell = document.createElement('td');
                            cell.setAttribute('colspan', '2'); // Span across both columns
                            cell.textContent = 'No users found';
                            row.appendChild(cell);
                            recipientTableBody.appendChild(row);
                        }
                    },
                    error: function (error) {
                        console.error('Error:', error.responseText);
                    }
                });
            } 
            else {
                // Clear the table body if the input length is less than 4
                document.getElementById('recipientTableBody').innerHTML = '';

                // Hide the table header if input length is less than 4
                const tableHeader = document.getElementById('tableHeader');
                if (!tableHeader.hasAttribute('hidden')) {
                    tableHeader.setAttribute('hidden', true);
                }
            }
        }

        // Attach an event listener to the 'mobileNumber' input field to detect input changes
        document.getElementById('mobileNumber').addEventListener('input', function () {
            searchPhoneNumber();

            // Get the current value of the mobileNumber input field
            const phoneNumber = this.value;

            // If the length of phoneNumber is less than 4, immediately empty the reviewTransferTo element
            if (phoneNumber.length < 8) {
                document.getElementById('reviewTransferTo').textContent = '';
            } 
        });


        document.getElementById('amount').addEventListener('input', function () {
            if (this.value === '' || parseFloat(this.value) < 1) {
                this.value = '1';
            }
        });



        //function updatePaymentMethod() {
        //    const paymentType = document.getElementById('paymentType').value;
        //    const nricInput = document.getElementById('nricInput');
        //    const mobileInput = document.getElementById('mobileInput');

        //    // Show or hide inputs based on the selected payment method
        //    if (paymentType === '2') {
        //        nricInput.style.display = 'block';
        //        mobileInput.style.display = 'none';
        //    } else if (paymentType === '3') {
        //        nricInput.style.display = 'none';
        //        mobileInput.style.display = 'block';
        //    }
        //    else {
        //        // Handle other payment methods if needed
        //        nricInput.style.display = 'none';
        //        mobileInput.style.display = 'none';
        //    }

        //    updateReviewContent();
        //}


        

    </script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/search.js" asp-append-version="true"></script>
    <script src="~/js/annyang-setup.js" asp-append-version="true"></script>
</body>

</html>