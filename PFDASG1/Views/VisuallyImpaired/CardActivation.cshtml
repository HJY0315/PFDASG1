@model PFDASG1.Models.CreditCard
@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int userid = 0;
    var session = HttpContextAccessor.HttpContext;

    if (session != null)
    {
        userid = session.Session.GetInt32("id") ?? 0;

        if (userid > 0)
        {
            // User is logged in, load the appropriate navbar
            <partial name="_navbar" />
        }
        else
        {
            // User is not logged in, load an alternate navbar or handle the scenario
             <partial name="Navbar" />
        }
    }
    else
    {
        <partial name="Navbar" />
    }


}


<!DOCTYPE html>
<html>
<head>
    <!-- Use Unicode character encoding - multi-language compatibility -->
    <meta charset="utf-8">

    <!-- Set the initial view zooming scale for mobile device -->
    <meta name="viewport" content="width = device-width,
 initial-scale = 1" />

    <title>OCBC - Card Activation</title>

    <!-- Reference to customized styling for this website -->
    @*<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />*@
    <link rel="stylesheet" type="text/css" href="~/css/setting.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">

    <!-- Bootstrap JavaScript (Popper.js is required for dropdowns) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script src="//cdnjs.cloudflare.com/ajax/libs/annyang/2.6.0/annyang.min.js"></script>

    <script src="https://cdn.lordicon.com/lordicon.js"></script>

    <script src="https://kit.fontawesome.com/13eda29b0b.js" crossorigin="anonymous"></script>

    @{
        // Check if Context and Session are not null
        var fontSize = Context?.Session?.GetInt32("FontSize") ?? 20;
    }

    <style>
        body {
            font-size: @(fontSize)px;
        }
    </style>
</head>

<body>
    <style>
        .iconContainer {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 8;
            background-color: white; /* Set the background color to white */
            padding: 10px; /* Optional: Add padding for space around the icon */
            border-radius: 15px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            height: 250px;
            width: 250px;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .iconCompleted {
            width: 100%; /* Set the width and height to 100% to fill the container */
            height: 100%;
        }

        #iconAnimations {
            color: red;
        }
    </style>

    @if (ViewData["CardActivation"] != null)
    {
        <div role="alert" aria-live="polite" class="visually-hidden">
            <span class="form-control-plaintext text-danger">@ViewData["CardActivation"]</span>
        </div>

        @if (ViewData["CardActivation"].ToString().Equals("Card Activated Successfully", StringComparison.OrdinalIgnoreCase))
        {
            <div class="iconContainer">
                <lord-icon class="iconCompleted" id="iconAnimation" src="https://cdn.lordicon.com/guqkthkk.json"
                           trigger="in"
                           delay="1000"
                           style="width: 250px; height: 250px">
                </lord-icon>
            </div>

            <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
            <script>
                $(document).ready(function () {
                    // Select the Lottie animation
                    var iconAnimation = $("#iconAnimation");

                    // Show the animation
                    iconAnimation.show();

                    // Set a timeout to remove the element after 3000 milliseconds (3 seconds)
                    setTimeout(function () {
                        iconAnimation.remove();
                        $(".iconContainer").remove();
                    }, 3000);
                });
            </script>
        }
        else
        {
            <div class="iconContainer">
                <i id="iconAnimations" class="fa-regular fa-circle-xmark fa-10x"></i>
            </div>

            <script>
                $(document).ready(function () {
                    var iconAnimation = $("#iconAnimations");

                    // Show the animation
                    iconAnimation.show();

                    // Set a timeout to remove the element after 3000 milliseconds (3 seconds)
                    setTimeout(function () {
                        iconAnimation.remove();
                        $(".iconContainer").remove();
                    }, 3000);
                });
            </script>
        }
    }

    <div class="checkout">
        <div class="credit-card-box"  aria-hidden="true">
            <div class="flip">
                <div class="front">
                    <div class="chip"></div>
                    <div class="logo">
                        <svg version="1.1" id="visa" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                             width="47.834px" height="47.834px" viewBox="0 0 47.834 47.834" style="enable-background:new 0 0 47.834 47.834;">
                            <g>
                                <g>
                                    <path d="M44.688,16.814h-3.004c-0.933,0-1.627,0.254-2.037,1.184l-5.773,13.074h4.083c0,0,0.666-1.758,0.817-2.143
                           c0.447,0,4.414,0.006,4.979,0.006c0.116,0.498,0.474,2.137,0.474,2.137h3.607L44.688,16.814z M39.893,26.01
                           c0.32-0.819,1.549-3.987,1.549-3.987c-0.021,0.039,0.317-0.825,0.518-1.362l0.262,1.23c0,0,0.745,3.406,0.901,4.119H39.893z
                           M34.146,26.404c-0.028,2.963-2.684,4.875-6.771,4.875c-1.743-0.018-3.422-0.361-4.332-0.76l0.547-3.193l0.501,0.228
                           c1.277,0.532,2.104,0.747,3.661,0.747c1.117,0,2.313-0.438,2.325-1.393c0.007-0.625-0.501-1.07-2.016-1.77
                           c-1.476-0.683-3.43-1.827-3.405-3.876c0.021-2.773,2.729-4.708,6.571-4.708c1.506,0,2.713,0.31,3.483,0.599l-0.526,3.092
                           l-0.351-0.165c-0.716-0.288-1.638-0.566-2.91-0.546c-1.522,0-2.228,0.634-2.228,1.227c-0.008,0.668,0.824,1.108,2.184,1.77
                           C33.126,23.546,34.163,24.783,34.146,26.404z M0,16.962l0.05-0.286h6.028c0.813,0.031,1.468,0.29,1.694,1.159l1.311,6.304
                           C7.795,20.842,4.691,18.099,0,16.962z M17.581,16.812l-6.123,14.239l-4.114,0.007L3.862,19.161
                           c2.503,1.602,4.635,4.144,5.386,5.914l0.406,1.469l3.808-9.729L17.581,16.812L17.581,16.812z M19.153,16.8h3.89L20.61,31.066
                           h-3.888L19.153,16.8z" />
                                </g>
                            </g>
                        </svg>
                    </div>
                    <div class="number"></div>
                    <div class="card-holder">
                        <label>Card holder</label>
                        <div>1234 5678 1234 5678</div>
                    </div>
                    <div class="card-expiration-date">
                        <label>Expires</label>
                        <div>01/24</div>
                    </div>
                </div>
                <div class="back">
                    <div class="strip"></div>
                    <div class="logo">
                        <svg version="1.1" id="visa" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                             width="47.834px" height="47.834px" viewBox="0 0 47.834 47.834" style="enable-background:new 0 0 47.834 47.834;">
                            <g>
                                <g>
                                    <path d="M44.688,16.814h-3.004c-0.933,0-1.627,0.254-2.037,1.184l-5.773,13.074h4.083c0,0,0.666-1.758,0.817-2.143
                           c0.447,0,4.414,0.006,4.979,0.006c0.116,0.498,0.474,2.137,0.474,2.137h3.607L44.688,16.814z M39.893,26.01
                           c0.32-0.819,1.549-3.987,1.549-3.987c-0.021,0.039,0.317-0.825,0.518-1.362l0.262,1.23c0,0,0.745,3.406,0.901,4.119H39.893z
                           M34.146,26.404c-0.028,2.963-2.684,4.875-6.771,4.875c-1.743-0.018-3.422-0.361-4.332-0.76l0.547-3.193l0.501,0.228
                           c1.277,0.532,2.104,0.747,3.661,0.747c1.117,0,2.313-0.438,2.325-1.393c0.007-0.625-0.501-1.07-2.016-1.77
                           c-1.476-0.683-3.43-1.827-3.405-3.876c0.021-2.773,2.729-4.708,6.571-4.708c1.506,0,2.713,0.31,3.483,0.599l-0.526,3.092
                           l-0.351-0.165c-0.716-0.288-1.638-0.566-2.91-0.546c-1.522,0-2.228,0.634-2.228,1.227c-0.008,0.668,0.824,1.108,2.184,1.77
                           C33.126,23.546,34.163,24.783,34.146,26.404z M0,16.962l0.05-0.286h6.028c0.813,0.031,1.468,0.29,1.694,1.159l1.311,6.304
                           C7.795,20.842,4.691,18.099,0,16.962z M17.581,16.812l-6.123,14.239l-4.114,0.007L3.862,19.161
                           c2.503,1.602,4.635,4.144,5.386,5.914l0.406,1.469l3.808-9.729L17.581,16.812L17.581,16.812z M19.153,16.8h3.89L20.61,31.066
                           h-3.888L19.153,16.8z" />
                                </g>
                            </g>
                        </svg>

                    </div>
                    <div class="ccv">
                        <label>CVV</label>
                        <div>123</div>
                    </div>
                </div>
            </div>
        </div>
        <form class="form" asp-controller="VisuallyImpaired" asp-action="CardActivation" method="post" autocomplete="off" novalidate>
            <fieldset>
                <label for="card-number" class="cardactivationtext">Card Number (last 8 digits of your card number)</label>
                <input id="card-number" class="input-cart-number cardactivationtext" value="xxxx" readonly aria-hidden="true" />
                <input id="card-number-0" class="input-cart-number cardactivationtext" value="xxxx" readonly aria-hidden="true" />
                <input asp-for="cardNumber1" type="num" id="card-number-1" class="input-cart-number cardactivationtext" maxlength="4" placeholder="1234" required />
                <input asp-for="cardNumber2" type="num" id="card-number-2" class="input-cart-number cardactivationtext" maxlength="4" placeholder="1234" required />
            </fieldset>

            <fieldset>
                <label for="card-holder" class="cardactivationtext">Card holder</label>
                <input type="text" id="card-holder" asp-for="cardHolderName" placeholder="Name on the card" class="cardactivationtext" required />
            </fieldset>
            <fieldset class="fieldset-expiration">
                <label for="expirationMonth" class="cardactivationtext">Expiration date</label>
                <div class="expiration-inputs cardactivationtext">
                    <div style="width:130px;  margin-top: 3px; margin-right: 6px">
                        <input type="number" id="card-expiration-month" asp-for="expirationMonth" placeholder="Month" min="1" max="12" class="cardactivationtext">
    @*                     <select id="card-expiration-month" asp-for="expirationMonth">
                            <option>Month</option>
                            <option value="01">01</option>
                            <option value="02">02</option>
                            <option value="03">03</option>
                            <option value="04">04</option>
                            <option value="05">05</option>
                            <option value="06">06</option>
                            <option value="07">07</option>
                            <option value="08">08</option>
                            <option value="09">09</option>
                            <option value="10">10</option>
                            <option value="11">11</option>
                            <option value="12">12</option>
                        </select> *@
                    </div>
                    <div style="width:120px; margin-top: 3px; margin-right: 5px">
                        <input type="number" id="card-expiration-year" asp-for="expirationYear" placeholder="Year" min="2023" max="2035" class="cardactivationtext">
    @*                     <select id="card-expiration-year" asp-for="expirationYear">
                            <option>Year</option>
                            <option value="2023">2023</option>
                            <option value="2024">2024</option>
                            <option value="2025">2025</option>
                            <option value="2026">2026</option>
                            <option value="2027">2027</option>
                            <option value="2028">2028</option>
                            <option value="2029">2029</option>
                            <option value="2030">2030</option>
                            <option value="2031">2031</option>
                            <option value="2032">2032</option>
                        </select> *@
                    </div>
                </div>
            </fieldset>

            <fieldset class="fieldset-ccv">
                <label for="cvv" class="cardactivationtext">CCV</label>
                <input asp-for="cvv" type="text" id="card-ccv" maxlength="3" required />
            </fieldset>

            <div id="security-questions-container">
                <!-- Initial security question fieldset -->
                <fieldset class="security-question-fieldset">
                    <div class="security-question-inputs cardactivationtext">
                        <div class="select">
                            <select asp-for="securityQuestion" class=" cardactivationtext security-question-dropdown">
                                <option>Questions</option>
                                <option value="1">Where is your primary school?</option>
                                <option value="2">Who is your best friend?</option>
                                <option value="3">Do you have any musical background?</option>
                            </select>
                        </div>
                        <input asp-for="securityQuestion" type="text" class="security-question cardactivationtext" maxlength="20" style="margin-top:10px; border: none; display:none;" placeholder="Questions" required/>
                        <input asp-for="answer" type="text" class="security-answer" maxlength="20" style="margin-top:10px; border: none;" placeholder="Answer" required />
                    </div>
                </fieldset>
                <!-- Add button -->
                @* <button class="btn-add-question"><i class="fas fa-plus"></i>Add more questions</button> *@
            </div>
            @if (ViewData["CardActivation"] != null)
            {
                <span class="form-control-plaintext text-danger">@ViewData["CardActivation"]</span>
            }
            <button class="btn" id="SubmitButton"> <i class="fa fa-lock"></i> submit</button>
        </form>
    </div>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    @*    <script src="script.js"></script>*@

    <script>

        $('.input-cart-number').on('keyup change', function () {
            $t = $(this);

            if ($t.val().length > 3) {
                $t.next().focus();
            }

            var card_number = '';
            $('.input-cart-number').each(function (index) {
                if (index < 2) {
                    card_number += 'xxxx ';
                } else {
                    card_number += $(this).val() + ' ';
                    if ($(this).val().length == 4) {
                        $(this).next().focus();
                    }
                }
            })

            $('.credit-card-box .number').html(card_number);
        });

        $('#card-holder').on('keyup change', function () {
            $t = $(this);
            $('.credit-card-box .card-holder div').html($t.val());
        });

        $('#card-expiration-month, #card-expiration-year').change(function () {
            m = $('#card-expiration-month option').index($('#card-expiration-month option:selected'));
            m = (m < 10) ? '0' + m : m;
            y = $('#card-expiration-year').val().substr(2, 2);
            $('.card-expiration-date div').html(m + '/' + y);
        })

        $('#card-ccv').on('focus', function () {
            $('.credit-card-box').addClass('hover');
        }).on('blur', function () {
            $('.credit-card-box').removeClass('hover');
        }).on('keyup change', function () {
            $('.ccv div').html($(this).val());
        });

        setTimeout(function () {
            $('#card-number-1').focus();
        }, 500);

        

        const ActivationMsg = document.getElementById('CardActivationMsg').innerHTML;

        if (ActivationMsg == "Card Activated Successfully") {
            if (sessionStorage.getItem("annyangStatus" == "true"){
                speakResponse("Card activated successfully.")
            }
        }
        else if (ActivationMsg == "Card Activation Failed") {
            if (sessionStorage.getItem("annyangStatus" == "true"){
                speakResponse("Card activation failed.")
            }
        }

        $(document).ready(function () {
            $('#card-expiration-month').change(function () {
                var selectedMonth = $(this).val();
                $('#selected-month').val(selectedMonth);
            });
        });


    </script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/annyang-setup.js" asp-append-version="true"></script>
    <script src="~/js/search.js" asp-append-version="true"></script>
</body>
</html>

<!DOCTYPE html>
<html lang="en" dir="ltr">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@48,400,0,0" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@48,400,1,0" />

    <style>



        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: "Poppins", sans-serif;
        }

        .chatbot-toggler {
            position: fixed;
            bottom: 30px;
            right: 35px;
            outline: none;
            border: none;
            height: 50px;
            width: 50px;
            display: flex;
            cursor: pointer;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            background: #724ae8;
            transition: all 0.2s ease;
        }

        body.show-chatbot .chatbot-toggler {
            transform: rotate(90deg);
        }

        .chatbot-toggler span {
            color: #fff;
            position: absolute;
        }

            .chatbot-toggler span:last-child,
            body.show-chatbot .chatbot-toggler span:first-child {
                opacity: 0;
            }

        body.show-chatbot .chatbot-toggler span:last-child {
            opacity: 1;
        }

        .chatbot {
            position: fixed;
            right: 35px;
            bottom: 90px;
            width: 420px;
            background: #fff;
            border-radius: 15px;
            overflow: hidden;
            opacity: 0;
            pointer-events: none;
            transform: scale(0.5);
            transform-origin: bottom right;
            box-shadow: 0 0 128px 0 rgba(0, 0, 0, 0.1), 0 32px 64px -48px rgba(0, 0, 0, 0.5);
            transition: all 0.1s ease;
        }

        body.show-chatbot .chatbot {
            opacity: 1;
            pointer-events: auto;
            transform: scale(1);
        }

        .chatbot header {
            padding: 16px 0;
            position: relative;
            text-align: center;
            color: #fff;
            background: #724ae8;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

            .chatbot header span {
                position: absolute;
                right: 15px;
                top: 50%;
                display: none;
                cursor: pointer;
                transform: translateY(-50%);
            }

        header h2 {
            font-size: 1.4rem;
        }

        .chatbot .chatbox {
            overflow-y: auto;
            height: 400px;
            padding: 30px 20px 60px;
        }

        .chatbot :where(.chatbox, textarea)::-webkit-scrollbar {
            width: 6px;
        }

        .chatbot :where(.chatbox, textarea)::-webkit-scrollbar-track {
            background: #fff;
            border-radius: 25px;
        }

        .chatbot :where(.chatbox, textarea)::-webkit-scrollbar-thumb {
            background: #ccc;
            border-radius: 25px;
        }

        .chatbox .chat {
            display: flex;
            list-style: none;
        }

        .chatbox .outgoing {
            margin: 20px 0;
            justify-content: flex-end;
        }

        .chatbox {
            overflow-y: auto;
            height: 250px;
            padding: 100px 20px 20px;
        }

            .chatbox .incoming span {
                width: 32px;
                height: 32px;
                color: #fff;
                cursor: default;
                text-align: center;
                line-height: 32px;
                align-self: flex-start;
                background: #724ae8;
                border-radius: 4px;
                margin: 0 10px 7px 0;
            }

            .chatbox .chat p {
                white-space: pre-wrap;
                padding: 12px 16px;
                border-radius: 10px 10px 0 10px;
                max-width: 75%;
                color: #000000;
                font-size: 1rem;
                background: #ececec;
            }


        .chat-buttons {
            display: flex;
            justify-content: space-between;
            margin-top: 20px;
        }

        .voice-command-btn,
        .keyboard-shortcut-btn {
            padding: 5px 12px;
            background-color: #724ae8;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }


        .voice-command-btn {
            margin-right: 8px;
        }

            .voice-command-btn:hover,
            .keyboard-shortcut-btn:hover {
                background-color: #94bdfa;
            }

        .chatbox .incoming span {
            width: 32px;
            height: 32px;
            color: #fff;
            cursor: default;
            text-align: center;
            line-height: 32px;
            align-self: flex-start;
            background: #724ae8;
            border-radius: 4px;
            margin-top: 30px;
        }

        .chatbox .incoming p {
            padding: 12px 16px;
            border-radius: 10px 10px 0 10px;
            max-width: 75%;
            color: #000000;
            font-size: 0.95rem;
            background: #ececec;
            margin-top: 30px;
        }

        .chatbox .incoming .generated-textbox {
            font-size: 1.5rem;
            text-align: left;
        }
    </style>

</head>
<body>
    <button class="chatbot-toggler">
        <span class="material-symbols-rounded">mode_comment</span>
        <span class="material-symbols-outlined">close</span>
    </button>
    <div class="chatbot">
        <header>
            <h2>Chatbot</h2>
            <span class="close-btn material-symbols-outlined">close</span>
        </header>
        <ul class="chatbox">
            <li class="chat incoming">
                <span class="material-symbols-outlined">smart_toy</span>
                <p>Hi there 👋<br>How can I help you today?</p>
            </li>

            <li class="chat incoming" id="buttons-container">
                <div class="chat-buttons">
                    <button class="voice-command-btn">Voice Commands</button>
                    <button class="keyboard-shortcut-btn">Keyboard Shortcuts</button>
                </div>
            </li>
        </ul>
    </div>

    <script>

        const chatbotToggler = document.querySelector(".chatbot-toggler");
        const closeBtn = document.querySelector(".close-btn");
        const chatbox = document.querySelector(".chatbox");
        const voiceCommandBtn = document.querySelector(".voice-command-btn");
        const keyboardShortcutBtn = document.querySelector(".keyboard-shortcut-btn");

        const createChatLi = (message, className) => {
            const chatLi = document.createElement("li");
            chatLi.classList.add("chat", `${className}`);

            let chatContent = className === "outgoing" ? `<p class="generated-textbox"></p>` : `<span class="material-symbols-outlined">smart_toy</span><p class="generated-textbox"></p>`;
            chatLi.innerHTML = chatContent;
            chatLi.querySelector(".generated-textbox").innerHTML = message;
            return chatLi;
        }

        const handleButtonClick = (buttonType) => {
            const existingVoiceCommandList = document.querySelector(".voice-command-list");
            const existingKeyboardShortcutList = document.querySelector(".keyboard-shortcut-list");

            if (existingVoiceCommandList) {
                existingVoiceCommandList.remove();
            }

            if (existingKeyboardShortcutList) {
                existingKeyboardShortcutList.remove();
            }

            if (buttonType === "voice-command") {
                const voiceCommands = `
1.Go to login page - Brings you to login page

2.Go to home page - Brings you to Home page

3.Go to card activation - Brings you to card activation page

4.Access code (Code) - Enter your Access code

5.Pin number (PIN) - Enter your Pin number

6.Login - Logs you in

7.Logout - Logs you out

8.Search - Brings you to search feature

9.Type in - Types in what you say

10.Go to payment page - Brings you to the payment page

11.Enter - Enters your search

12.Next - Clicks the next button for you

13.Skip - Clicks the skip button for you

14.Increase font size - Increases font size

15.Decrease font size - Decreases font size

16.Toggle dark mode - Enables dark mode

17.Help - clicks on chatbot

18.Voice command - displays the voice commands

19.Keyboard - displays keyboard shortcuts

                              `;
                const chatLi = createChatLi(voiceCommands, "incoming");
                chatLi.classList.add("voice-command-list");
                chatbox.appendChild(chatLi);
                addButtons();
            } else if (buttonType === "keyboard-shortcut") {
                const keyboardShortcutMessage = "Hold Control_ Activate voice recognition";
                const chatLi = createChatLi(keyboardShortcutMessage, "incoming");
                chatLi.classList.add("keyboard-shortcut-list");
                chatbox.appendChild(chatLi);
                addButtons();
            }


            chatbox.scrollTop = chatbox.scrollHeight;
        }

        const addButtons = () => {
            const buttonsContainer = document.querySelector(".chatbox");
            if (buttonsContainer) {

                const existingButtons = document.querySelector(".chat-buttons");
                if (existingButtons) {
                    existingButtons.remove();
                }

                const chatButtons = document.createElement("div");
                chatButtons.classList.add("chat-buttons");
                chatButtons.innerHTML = `
                              <button class="voice-command-btn">Voice Commands</button>
                              <button class="keyboard-shortcut-btn">Keyboard Shortcuts</button>
                            `;
                buttonsContainer.appendChild(chatButtons);
            }
        }

        document.addEventListener("click", (event) => {
            const target = event.target;
            if (target.classList.contains("voice-command-btn")) {
                handleButtonClick("voice-command");
            } else if (target.classList.contains("keyboard-shortcut-btn")) {
                handleButtonClick("keyboard-shortcut");
            }
        });

        closeBtn.addEventListener("click", () => document.body.classList.remove("show-chatbot"));
        chatbotToggler.addEventListener("click", () => document.body.classList.toggle("show-chatbot"));
    </script>
</body>
</html>

